CCS PCM C Compiler, Version 5.015, 5967               04-Aug-20 09:47

               Filename:   E:\VDK-TrongTan\2.2\vd2.2.lst

               ROM used:   68 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           9 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   024
0003:  NOP
....................  #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses NOWDT, HS, NOPUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP 
.................... #use delay(clock=8M) 
.................... void delay400ms() 
.................... { 
....................    Setup_timer_0(RTCC_INTERNAL|RTCC_DIV_4); 
0004:  BSF    03.5
0005:  MOVF   01,W
0006:  ANDLW  C0
0007:  IORLW  01
0008:  MOVWF  01
....................    for(int16 i=0;i<800;i++) 
0009:  BCF    03.5
000A:  CLRF   22
000B:  CLRF   21
000C:  MOVF   22,W
000D:  SUBLW  03
000E:  BTFSS  03.0
000F:  GOTO   023
0010:  BTFSS  03.2
0011:  GOTO   016
0012:  MOVF   21,W
0013:  SUBLW  1F
0014:  BTFSS  03.0
0015:  GOTO   023
....................    { 
....................    Setup_timer_0(0); 
0016:  BSF    03.5
0017:  MOVF   01,W
0018:  ANDLW  C0
0019:  MOVWF  01
....................    while(get_timer0()<250); 
001A:  BCF    03.5
001B:  MOVF   01,W
001C:  SUBLW  F9
001D:  BTFSC  03.0
001E:  GOTO   01B
001F:  INCF   21,F
0020:  BTFSC  03.2
0021:  INCF   22,F
0022:  GOTO   00C
....................    } 
0023:  RETURN
.................... } 
.................... void main(void) 
0024:  MOVF   03,W
0025:  ANDLW  1F
0026:  MOVWF  03
0027:  MOVLW  FF
0028:  MOVWF  20
0029:  BSF    03.5
002A:  BSF    1F.0
002B:  BSF    1F.1
002C:  BSF    1F.2
002D:  BCF    1F.3
002E:  MOVLW  07
002F:  MOVWF  1C
0030:  BCF    03.7
.................... {  
.................... While(1) 
....................    { 
....................    output_c(0x01); 
0031:  MOVLW  00
0032:  BCF    03.5
0033:  MOVWF  20
0034:  BSF    03.5
0035:  CLRF   07
0036:  MOVLW  01
0037:  BCF    03.5
0038:  MOVWF  07
....................    delay400ms(); 
0039:  CALL   004
....................    output_c(0x00); 
003A:  MOVLW  00
003B:  MOVWF  20
003C:  BSF    03.5
003D:  CLRF   07
003E:  BCF    03.5
003F:  CLRF   07
....................    delay400ms(); 
0040:  CALL   004
0041:  BSF    03.5
0042:  GOTO   031
....................    } 
.................... } 
0043:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
