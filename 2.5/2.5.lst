CCS PCM C Compiler, Version 5.015, 5967               11-Aug-20 08:10

               Filename:   G:\VDK-TrongTan\2.5\2.5.lst

               ROM used:   295 words (4%)
                           Largest free fragment is 2048
               RAM used:   27 (7%) at main() level
                           35 (10%) worst case
               Stack used: 4 locations (2 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0E0
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   068
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0031:  BCF    0A.0
0032:  BCF    0A.1
0033:  BCF    0A.2
0034:  ADDWF  02,F
0035:  RETLW  03
0036:  RETLW  9F
0037:  RETLW  25
0038:  RETLW  0D
0039:  RETLW  99
003A:  RETLW  49
003B:  RETLW  41
003C:  RETLW  1F
003D:  RETLW  01
003E:  RETLW  09
003F:  MOVF   3C,W
0040:  CLRF   78
0041:  SUBWF  3B,W
0042:  BTFSC  03.0
0043:  GOTO   047
0044:  MOVF   3B,W
0045:  MOVWF  77
0046:  GOTO   053
0047:  CLRF   77
0048:  MOVLW  08
0049:  MOVWF  3D
004A:  RLF    3B,F
004B:  RLF    77,F
004C:  MOVF   3C,W
004D:  SUBWF  77,W
004E:  BTFSC  03.0
004F:  MOVWF  77
0050:  RLF    78,F
0051:  DECFSZ 3D,F
0052:  GOTO   04A
0053:  RETURN
....................  
.................... #list 
....................  
.................... #fuses NOWDT, HS, NOPUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP 
.................... #use delay(clock=8M) 
0054:  MOVLW  3B
0055:  MOVWF  04
0056:  BCF    03.7
0057:  MOVF   00,W
0058:  BTFSC  03.2
0059:  GOTO   067
005A:  MOVLW  02
005B:  MOVWF  78
005C:  CLRF   77
005D:  DECFSZ 77,F
005E:  GOTO   05D
005F:  DECFSZ 78,F
0060:  GOTO   05C
0061:  MOVLW  97
0062:  MOVWF  77
0063:  DECFSZ 77,F
0064:  GOTO   063
0065:  DECFSZ 00,F
0066:  GOTO   05A
0067:  RETURN
.................... int8 dv,chuc,dem; 
.................... int8 den[9]={0x00,0x01,0x03,0x07,0x0f,0x1f,0x3f,0x7f,0xff}; 
*
00ED:  BCF    03.5
00EE:  CLRF   2B
00EF:  MOVLW  01
00F0:  MOVWF  2C
00F1:  MOVLW  03
00F2:  MOVWF  2D
00F3:  MOVLW  07
00F4:  MOVWF  2E
00F5:  MOVLW  0F
00F6:  MOVWF  2F
00F7:  MOVLW  1F
00F8:  MOVWF  30
00F9:  MOVLW  3F
00FA:  MOVWF  31
00FB:  MOVLW  7F
00FC:  MOVWF  32
00FD:  MOVLW  FF
00FE:  MOVWF  33
.................... const int8 led[10]={0x03,0x9f,0x25,0x0d,0x99,0x49,0x41,0x1f,0x01,0x09}; 
.................... void dl_ms(int16 x) 
.................... {for(int16 j=0;j<x;j++) delay_us(1000); 
*
00C4:  CLRF   39
00C5:  CLRF   38
00C6:  MOVF   39,W
00C7:  SUBWF  37,W
00C8:  BTFSS  03.0
00C9:  GOTO   0DD
00CA:  BTFSS  03.2
00CB:  GOTO   0D0
00CC:  MOVF   36,W
00CD:  SUBWF  38,W
00CE:  BTFSC  03.0
00CF:  GOTO   0DD
00D0:  CLRF   27
00D1:  BTFSC  0B.7
00D2:  BSF    27.7
00D3:  BCF    0B.7
00D4:  MOVLW  01
00D5:  MOVWF  3B
00D6:  CALL   054
00D7:  BTFSC  27.7
00D8:  BSF    0B.7
00D9:  INCF   38,F
00DA:  BTFSC  03.2
00DB:  INCF   39,F
00DC:  GOTO   0C6
00DD:  BCF    0A.3
00DE:  BCF    0A.4
00DF:  GOTO   121 (RETURN)
.................... } 
.................... #INT_TIMER1 
.................... void qled() 
.................... { 
....................    dv=dem%10; 
*
0068:  MOVF   2A,W
0069:  MOVWF  3B
006A:  MOVLW  0A
006B:  MOVWF  3C
006C:  CALL   03F
006D:  MOVF   77,W
006E:  MOVWF  28
....................    chuc=dem/10; 
006F:  MOVF   2A,W
0070:  MOVWF  3B
0071:  MOVLW  0A
0072:  MOVWF  3C
0073:  CALL   03F
0074:  MOVF   78,W
0075:  MOVWF  29
....................     
....................    output_d(0xff); 
0076:  BSF    03.5
0077:  CLRF   08
0078:  MOVLW  FF
0079:  BCF    03.5
007A:  MOVWF  08
....................    output_b(0x63); 
007B:  BSF    03.5
007C:  CLRF   06
007D:  MOVLW  63
007E:  BCF    03.5
007F:  MOVWF  06
....................    output_low(pin_D3); 
0080:  BSF    03.5
0081:  BCF    08.3
0082:  BCF    03.5
0083:  BCF    08.3
....................    delay_ms(3); 
0084:  MOVLW  03
0085:  MOVWF  3B
0086:  CALL   054
....................    output_d(0xff); 
0087:  BSF    03.5
0088:  CLRF   08
0089:  MOVLW  FF
008A:  BCF    03.5
008B:  MOVWF  08
....................    output_b(0xe0); 
008C:  BSF    03.5
008D:  CLRF   06
008E:  MOVLW  E0
008F:  BCF    03.5
0090:  MOVWF  06
....................    output_low(pin_D2); 
0091:  BSF    03.5
0092:  BCF    08.2
0093:  BCF    03.5
0094:  BCF    08.2
....................    delay_ms(3); 
0095:  MOVLW  03
0096:  MOVWF  3B
0097:  CALL   054
....................     
....................    output_d(0xff); 
0098:  BSF    03.5
0099:  CLRF   08
009A:  MOVLW  FF
009B:  BCF    03.5
009C:  MOVWF  08
....................    output_b(led[chuc]); 
009D:  MOVF   29,W
009E:  CALL   031
009F:  MOVWF  3B
00A0:  BSF    03.5
00A1:  CLRF   06
00A2:  BCF    03.5
00A3:  MOVF   3B,W
00A4:  MOVWF  06
....................    output_low(pin_D1); 
00A5:  BSF    03.5
00A6:  BCF    08.1
00A7:  BCF    03.5
00A8:  BCF    08.1
....................    delay_ms(3); 
00A9:  MOVLW  03
00AA:  MOVWF  3B
00AB:  CALL   054
....................     
....................    output_d(0xff); 
00AC:  BSF    03.5
00AD:  CLRF   08
00AE:  MOVLW  FF
00AF:  BCF    03.5
00B0:  MOVWF  08
....................    output_b(led[dv]); 
00B1:  MOVF   28,W
00B2:  CALL   031
00B3:  MOVWF  3B
00B4:  BSF    03.5
00B5:  CLRF   06
00B6:  BCF    03.5
00B7:  MOVF   3B,W
00B8:  MOVWF  06
....................    output_low(pin_D0); 
00B9:  BSF    03.5
00BA:  BCF    08.0
00BB:  BCF    03.5
00BC:  BCF    08.0
....................    delay_ms(3); 
00BD:  MOVLW  03
00BE:  MOVWF  3B
00BF:  CALL   054
00C0:  BCF    0C.0
00C1:  BCF    0A.3
00C2:  BCF    0A.4
00C3:  GOTO   01D
.................... } 
.................... void main(void) 
*
00E0:  MOVF   03,W
00E1:  ANDLW  1F
00E2:  MOVWF  03
00E3:  MOVLW  FF
00E4:  MOVWF  34
00E5:  BSF    03.5
00E6:  BSF    1F.0
00E7:  BSF    1F.1
00E8:  BSF    1F.2
00E9:  BCF    1F.3
00EA:  MOVLW  07
00EB:  MOVWF  1C
00EC:  BCF    03.7
.................... {  
.................... enable_interrupts(GLOBAL); 
*
00FF:  MOVLW  C0
0100:  IORWF  0B,F
.................... enable_interrupts(INT_TIMER1); 
0101:  BSF    03.5
0102:  BSF    0C.0
.................... setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
0103:  MOVLW  85
0104:  BCF    03.5
0105:  MOVWF  10
.................... while(dem<50) 
0106:  MOVF   2A,W
0107:  SUBLW  31
0108:  BTFSS  03.0
0109:  GOTO   126
.................... { 
.................... for(int8 t=0;t<9;t++) 
010A:  CLRF   35
010B:  MOVF   35,W
010C:  SUBLW  08
010D:  BTFSS  03.0
010E:  GOTO   123
.................... { 
....................    output_c(den[t]); 
010F:  MOVLW  2B
0110:  ADDWF  35,W
0111:  MOVWF  04
0112:  BCF    03.7
0113:  MOVF   00,W
0114:  MOVWF  36
0115:  MOVLW  00
0116:  MOVWF  34
0117:  BSF    03.5
0118:  CLRF   07
0119:  BCF    03.5
011A:  MOVF   36,W
011B:  MOVWF  07
....................   dl_ms(300); 
011C:  MOVLW  01
011D:  MOVWF  37
011E:  MOVLW  2C
011F:  MOVWF  36
0120:  GOTO   0C4
0121:  INCF   35,F
0122:  GOTO   10B
.................... } 
....................    dem=dem+1; 
0123:  MOVLW  01
0124:  ADDWF  2A,F
0125:  GOTO   106
....................  
.................... } 
....................  
.................... } 
0126:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
