CCS PCM C Compiler, Version 5.015, 5967               04-Aug-20 08:51

               Filename:   E:\VDK-TrongTan\2.3\vd3.lst

               ROM used:   162 words (2%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           13 (4%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   08D
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   045
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses NOWDT, HS, NOPUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP 
.................... #use delay(clock=8M) 
0031:  MOVLW  27
0032:  MOVWF  04
0033:  BCF    03.7
0034:  MOVF   00,W
0035:  BTFSC  03.2
0036:  GOTO   044
0037:  MOVLW  02
0038:  MOVWF  78
0039:  CLRF   77
003A:  DECFSZ 77,F
003B:  GOTO   03A
003C:  DECFSZ 78,F
003D:  GOTO   039
003E:  MOVLW  97
003F:  MOVWF  77
0040:  DECFSZ 77,F
0041:  GOTO   040
0042:  DECFSZ 00,F
0043:  GOTO   037
0044:  RETURN
.................... #INT_TIMER1 
.................... void qled() 
.................... { 
....................    output_d(0xff); 
0045:  BSF    03.5
0046:  CLRF   08
0047:  MOVLW  FF
0048:  BCF    03.5
0049:  MOVWF  08
....................    output_b(0x91);output_low(PIN_D3);delay_ms(3); 
004A:  BSF    03.5
004B:  CLRF   06
004C:  MOVLW  91
004D:  BCF    03.5
004E:  MOVWF  06
004F:  BSF    03.5
0050:  BCF    08.3
0051:  BCF    03.5
0052:  BCF    08.3
0053:  MOVLW  03
0054:  MOVWF  27
0055:  CALL   031
....................    output_d(0xff); 
0056:  BSF    03.5
0057:  CLRF   08
0058:  MOVLW  FF
0059:  BCF    03.5
005A:  MOVWF  08
....................    output_b(0x61);output_low(PIN_D2);delay_ms(3); 
005B:  BSF    03.5
005C:  CLRF   06
005D:  MOVLW  61
005E:  BCF    03.5
005F:  MOVWF  06
0060:  BSF    03.5
0061:  BCF    08.2
0062:  BCF    03.5
0063:  BCF    08.2
0064:  MOVLW  03
0065:  MOVWF  27
0066:  CALL   031
....................    output_d(0xff); 
0067:  BSF    03.5
0068:  CLRF   08
0069:  MOVLW  FF
006A:  BCF    03.5
006B:  MOVWF  08
....................    output_b(0xe3);output_low(PIN_D1);delay_ms(3); 
006C:  BSF    03.5
006D:  CLRF   06
006E:  MOVLW  E3
006F:  BCF    03.5
0070:  MOVWF  06
0071:  BSF    03.5
0072:  BCF    08.1
0073:  BCF    03.5
0074:  BCF    08.1
0075:  MOVLW  03
0076:  MOVWF  27
0077:  CALL   031
....................    output_d(0xff); 
0078:  BSF    03.5
0079:  CLRF   08
007A:  MOVLW  FF
007B:  BCF    03.5
007C:  MOVWF  08
....................    output_b(0x31);output_low(PIN_D0);delay_ms(3); 
007D:  BSF    03.5
007E:  CLRF   06
007F:  MOVLW  31
0080:  BCF    03.5
0081:  MOVWF  06
0082:  BSF    03.5
0083:  BCF    08.0
0084:  BCF    03.5
0085:  BCF    08.0
0086:  MOVLW  03
0087:  MOVWF  27
0088:  CALL   031
0089:  BCF    0C.0
008A:  BCF    0A.3
008B:  BCF    0A.4
008C:  GOTO   01D
.................... } 
.................... void main(void) 
008D:  MOVF   03,W
008E:  ANDLW  1F
008F:  MOVWF  03
0090:  BSF    03.5
0091:  BSF    1F.0
0092:  BSF    1F.1
0093:  BSF    1F.2
0094:  BCF    1F.3
0095:  MOVLW  07
0096:  MOVWF  1C
0097:  BCF    03.7
.................... {  
.................... enable_interrupts(GLOBAL); 
0098:  MOVLW  C0
0099:  BCF    03.5
009A:  IORWF  0B,F
.................... enable_interrupts(INT_TIMER1); 
009B:  BSF    03.5
009C:  BSF    0C.0
.................... setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
009D:  MOVLW  85
009E:  BCF    03.5
009F:  MOVWF  10
.................... while(1); 
00A0:  GOTO   0A0
.................... } 
00A1:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
