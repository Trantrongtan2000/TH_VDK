CCS PCM C Compiler, Version 5.015, 5967               04-Aug-20 09:48

               Filename:   E:\VDK-TrongTan\2.1\vd1.lst

               ROM used:   71 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           9 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   027
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses NOWDT, HS, NOPUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP 
.................... #use delay(clock=8M) 
.................... void delay400ms() 
.................... { 
....................    Setup_timer_1(T1_INTERNAL|T1_DIV_BY_2); 
0004:  MOVLW  95
0005:  MOVWF  10
....................    for(int8 i=0;i<10;i++) 
0006:  CLRF   21
0007:  MOVF   21,W
0008:  SUBLW  09
0009:  BTFSS  03.0
000A:  GOTO   026
....................    { 
....................    Setup_timer_1(25536); 
000B:  MOVLW  C0
000C:  MOVWF  10
....................    while(get_timer1()>25536); 
000D:  MOVF   0F,W
000E:  MOVWF  7A
000F:  MOVF   0E,W
0010:  MOVWF  77
0011:  MOVF   0F,W
0012:  SUBWF  7A,W
0013:  BTFSS  03.2
0014:  GOTO   00D
0015:  MOVF   77,W
0016:  MOVWF  22
0017:  MOVF   7A,W
0018:  MOVWF  23
0019:  MOVF   23,W
001A:  SUBLW  62
001B:  BTFSC  03.0
001C:  GOTO   024
001D:  XORLW  FF
001E:  BTFSS  03.2
001F:  GOTO   00D
0020:  MOVF   22,W
0021:  SUBLW  C0
0022:  BTFSS  03.0
0023:  GOTO   00D
0024:  INCF   21,F
0025:  GOTO   007
....................    } 
0026:  RETURN
.................... } 
.................... void main(void) 
0027:  MOVF   03,W
0028:  ANDLW  1F
0029:  MOVWF  03
002A:  MOVLW  FF
002B:  MOVWF  20
002C:  BSF    03.5
002D:  BSF    1F.0
002E:  BSF    1F.1
002F:  BSF    1F.2
0030:  BCF    1F.3
0031:  MOVLW  07
0032:  MOVWF  1C
0033:  BCF    03.7
.................... {  
.................... While(1) 
....................    { 
....................    output_c(0x01); 
0034:  MOVLW  00
0035:  BCF    03.5
0036:  MOVWF  20
0037:  BSF    03.5
0038:  CLRF   07
0039:  MOVLW  01
003A:  BCF    03.5
003B:  MOVWF  07
....................    delay400ms(); 
003C:  CALL   004
....................    output_c(0x00); 
003D:  MOVLW  00
003E:  MOVWF  20
003F:  BSF    03.5
0040:  CLRF   07
0041:  BCF    03.5
0042:  CLRF   07
....................    delay400ms(); 
0043:  CALL   004
0044:  BSF    03.5
0045:  GOTO   034
....................    } 
.................... } 
0046:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
